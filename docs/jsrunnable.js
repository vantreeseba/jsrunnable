!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(n,s,function(t){return e[t]}.bind(null,s));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/",r(r.s=0)}([function(e,t,r){e.exports=r(1)},function(e,t,r){const n=r(2);window&&(window.Runnable=n)},function(e,t,r){const n=r(3),s=r(4);e.exports=class{constructor(){this._workers=[],this._workerOpMap=new Map,this._resultMap=new Map,this._lastWorkerIndex=0;const e=e=>{const t=e.data;"result"===t.type&&this._resultMap.has(t.callId)&&this._resultMap.get(t.callId).resolve(t.result),"error"===t.type&&this._resultMap.has(t.name)&&this._resultMap.get(t.name).reject(t.err),this._resultMap.delete(t.callId)},t=e=>{const t=ev.data;this._resultMap.has(t.name)&&this._resultMap.get(t.name).reject(e)};this.cores=navigator&&navigator.hardwareConcurrency||1;for(var r=0;r<this.cores;r++){const r=n.buildWorker(s);r.onmessage=e,r.onerror=t,this._workers.push(r)}}add(e,t=1){const r=e.name||n.randomId("id");return this._compile(r,e,t),(...e)=>this._call(r,...e)}_call(e,...t){e=e.name||e;const r=this._workers[this._getAndMoveIndexInOpMap(e)],s=n.randomId("call");return r.postMessage({type:"call",args:t,name:e,callId:s}),new Promise((e,t)=>{this._resultMap.set(s,{resolve:e,reject:t})})}_getAndMoveIndexInOpMap(e){const t=this._workerOpMap.get(e),r=t.pop();return t.unshift(r),r}_compile(e,t,r=1){if(this._workerOpMap.has(e))return;r=r>=1?r:1;const s={type:"compile",func:n.functionToMessage(t,e)},o=this._workerOpMap.get(e)||[];for(var a=0;a<r;a++){const e=this._lastWorkerIndex%this.cores;this._workers[e].postMessage(s),-1===o.indexOf(e)&&o.push(e),this._lastWorkerIndex++}this._workerOpMap.set(e,o)}}},function(e,t){class r{static funcToString(e){let t=e.toString();const r=t.indexOf("=>"),n=t.indexOf("(")>r||-1===t.indexOf("(");if(!t.startsWith("function")&&n){t="("+t.substring(0,r).trim()+") "+t.substring(r,t.length)}return t.trim()}static buildWorker(e){const t="("+r.funcToString(e)+")()";let n;if(window){var s=new Blob([t]),o=URL.createObjectURL(s,{type:"text/javascript"});n=new Worker(o)}else{if(!Worker)throw"You need node 10.x to use workers";n=new Worker(t,{eval:!0})}return n}static functionToMessage(e,t){var n=r.funcToString(e),s=n.substring(n.indexOf("(")+1,n.indexOf(")")),o=n.substring(n.indexOf("{")+1,n.lastIndexOf("}"));return{name:t||e.name,args:s,body:o}}static randomId(e=""){return e+"_"+Math.floor(Math.random()*Date.now())}}e.exports=r},function(e,t){e.exports=function(){const e=new Map,t=async t=>{try{((e,t)=>{postMessage({type:"result",name:e.name,callId:e.callId,result:t})})(t,await e.get(t.name)(...t.args))}catch(e){((e,t)=>{postMessage({type:"error",name:e.name,callId:e.callId,err:t})})(t,e)}};onmessage=(r=>{const n=r.data;"compile"===n.type?(t=>{const r=new Function(t.func.args.split(","),t.func.body);e.set(t.func.name,r)})(n):"call"===n.type&&t(n)})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,